MongoDB : MongoDB is a NoSQL document database that provide high performance scalability and flexibility for storing data i store data in JSON like formate called Binary JSON

SQL : schema 

     flexibility need to run migrations
    not complisary to run migrations

    scaling sql support vertical scalling while no sql supprt horizontal

    in sql data is organized in form of tables and relationships while in no-sql data can be stored in key-value paris
    documents or maybe in graph

    in user and friends table there wil be one-may relationship
    one user has many friends but every friend is associated with one user


what is socket.io : 

socket.io is a real-time , bidirectional , event base communication 
real-time mean once the connection is establishes the it will be persistent
socket.io use WebSockets incase of its absent it use long polling or server-sent events.

Room  : are used to group clients together => socket.join('room')  socket.to('room') socket.leave('room')
namespaces : Namespaces provide a way to separate communication channels within a socket.io


Promise.allSettled came with ES20


MonogBD has horizontal scaling

MongoDB is a schema-less
MongoDB uses a document-oriented model
MongoDB supports horizontal scalability and automatic sharding
Sharding is a method for distributing data across multiple machines

Document  => Document is a basic set of data storage in mongoDB key pair values
collection => is a collection of Documents 



when the embedded data is small, doesn't change frequently, and is always accessed together with the parent document.


Aggregation is a way of processing a large number of documents in a collection by means of passing them through different stages.
The stages make up what is known as a pipeline. The stages in a pipeline can filter, sort, group, reshape and modify documents that pass through the pipeline.


Transaction : Transaction is any operation that is treated as a single unit of work, which either completes fully or does not complete at all

There are 4 key properties that define a Transaction:

ACID stands for Atomicity, Consistency, Isolation, and Durability

Atomicity :  Ensures that a transaction is treated as a single indivisible unit of work  Either all the changes within the transaction are committed, or none of them are

Consistency: Consistency ensures that a transaction brings the database from one valid state to another valid state. It means that any changes made within a transaction must adhere to predefined rules and constraints

Isolation: Isolation refers to the concept of concurrent transactions executing independently and without interfering with each other

Durability: Durability guarantees that once a transaction is committed and changes are made permanent, they will persist even in the event of system failures, crashes, or power outages



Normalization : is the process of organizing data in a database efficiently by reducing redundancy and dependency.

First Normal Form : Ensures that each column in a table contains only atomic values

Second Normal Form : 1NF + eliminates partial dependencies by ensuring that each non-key column is dependent on the entire primary key 

Third Normal Form : Eliminates transitive dependencies by ensuring that no non-key column is dependent on another non-key column

what is indexing : An indexing is database structure that enhances query performance by enabling faster data retrieval. Indexes sort and store a copy of the data, making it easier to search and retrieve specific records


What is a foreign key : A foreign key is a column or a set of columns in a table that refers to the primary key of another table It establishes relationships between tables by enforcing referential integrity constraints


Inner join returns only the rows that have matching values in both tables


_id is automatic created objectId() of 12-bytes where 
i) 4-byte timestamp
ii) 5-byte random values
iii) 3-byte incrementing counter

how we can update data in mongoDB using Aggregation
how you can update data in chunks for large document update
how we can optimize mongoDB database query
what are middleware or hooks in mongoose
what is bulk write in mongoDB
